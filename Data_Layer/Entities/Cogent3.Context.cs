//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Cogent3Entities : DbContext
    {
        public Cogent3Entities()
            : base("name=Cogent3Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<iCitation> iCitations { get; set; }
        public DbSet<iWide> iWides { get; set; }
        public DbSet<iWideNew> iWideNews { get; set; }
    
        public virtual int ap_DisplayPMID(Nullable<int> userID, string pMIDList, Nullable<int> displayMode, Nullable<byte> searchSort)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var pMIDListParameter = pMIDList != null ?
                new ObjectParameter("PMIDList", pMIDList) :
                new ObjectParameter("PMIDList", typeof(string));
    
            var displayModeParameter = displayMode.HasValue ?
                new ObjectParameter("DisplayMode", displayMode) :
                new ObjectParameter("DisplayMode", typeof(int));
    
            var searchSortParameter = searchSort.HasValue ?
                new ObjectParameter("SearchSort", searchSort) :
                new ObjectParameter("SearchSort", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ap_DisplayPMID", userIDParameter, pMIDListParameter, displayModeParameter, searchSortParameter);
        }
    
        public virtual int ap_DisplayPMID_AJA_Dev(Nullable<int> userID, string pMIDList, Nullable<int> displayMode, Nullable<byte> searchSort)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var pMIDListParameter = pMIDList != null ?
                new ObjectParameter("PMIDList", pMIDList) :
                new ObjectParameter("PMIDList", typeof(string));
    
            var displayModeParameter = displayMode.HasValue ?
                new ObjectParameter("DisplayMode", displayMode) :
                new ObjectParameter("DisplayMode", typeof(int));
    
            var searchSortParameter = searchSort.HasValue ?
                new ObjectParameter("SearchSort", searchSort) :
                new ObjectParameter("SearchSort", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ap_DisplayPMID_AJA_Dev", userIDParameter, pMIDListParameter, displayModeParameter, searchSortParameter);
        }
    
        public virtual int ap_DisplayPMID_AJA_Dev_Detailed(Nullable<int> userID, string pMIDList, Nullable<int> displayMode, Nullable<byte> searchSort)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var pMIDListParameter = pMIDList != null ?
                new ObjectParameter("PMIDList", pMIDList) :
                new ObjectParameter("PMIDList", typeof(string));
    
            var displayModeParameter = displayMode.HasValue ?
                new ObjectParameter("DisplayMode", displayMode) :
                new ObjectParameter("DisplayMode", typeof(int));
    
            var searchSortParameter = searchSort.HasValue ?
                new ObjectParameter("SearchSort", searchSort) :
                new ObjectParameter("SearchSort", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ap_DisplayPMID_AJA_Dev_Detailed", userIDParameter, pMIDListParameter, displayModeParameter, searchSortParameter);
        }
    
        public virtual int ap_SearchQueryGet(Nullable<int> userID, string searchName, Nullable<int> searchID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            var searchIDParameter = searchID.HasValue ?
                new ObjectParameter("SearchID", searchID) :
                new ObjectParameter("SearchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ap_SearchQueryGet", userIDParameter, searchNameParameter, searchIDParameter);
        }
    
        public virtual int ap_SearchExecute_AJA(Nullable<int> userID, string searchName, Nullable<int> searchID, Nullable<int> searchMode, Nullable<int> shelfLife, Nullable<int> limitToUserLibrary, string thisAutorunDateS, Nullable<int> resultsFolder1, Nullable<int> resultsFolder2, string userDB, Nullable<int> keepDelete, Nullable<int> doNoExecute, ObjectParameter searchResultsCount, ObjectParameter queryDetails, ObjectParameter errorDesc)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            var searchIDParameter = searchID.HasValue ?
                new ObjectParameter("SearchID", searchID) :
                new ObjectParameter("SearchID", typeof(int));
    
            var searchModeParameter = searchMode.HasValue ?
                new ObjectParameter("SearchMode", searchMode) :
                new ObjectParameter("SearchMode", typeof(int));
    
            var shelfLifeParameter = shelfLife.HasValue ?
                new ObjectParameter("ShelfLife", shelfLife) :
                new ObjectParameter("ShelfLife", typeof(int));
    
            var limitToUserLibraryParameter = limitToUserLibrary.HasValue ?
                new ObjectParameter("LimitToUserLibrary", limitToUserLibrary) :
                new ObjectParameter("LimitToUserLibrary", typeof(int));
    
            var thisAutorunDateSParameter = thisAutorunDateS != null ?
                new ObjectParameter("ThisAutorunDateS", thisAutorunDateS) :
                new ObjectParameter("ThisAutorunDateS", typeof(string));
    
            var resultsFolder1Parameter = resultsFolder1.HasValue ?
                new ObjectParameter("ResultsFolder1", resultsFolder1) :
                new ObjectParameter("ResultsFolder1", typeof(int));
    
            var resultsFolder2Parameter = resultsFolder2.HasValue ?
                new ObjectParameter("ResultsFolder2", resultsFolder2) :
                new ObjectParameter("ResultsFolder2", typeof(int));
    
            var userDBParameter = userDB != null ?
                new ObjectParameter("UserDB", userDB) :
                new ObjectParameter("UserDB", typeof(string));
    
            var keepDeleteParameter = keepDelete.HasValue ?
                new ObjectParameter("KeepDelete", keepDelete) :
                new ObjectParameter("KeepDelete", typeof(int));
    
            var doNoExecuteParameter = doNoExecute.HasValue ?
                new ObjectParameter("DoNoExecute", doNoExecute) :
                new ObjectParameter("DoNoExecute", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ap_SearchExecute_AJA", userIDParameter, searchNameParameter, searchIDParameter, searchModeParameter, shelfLifeParameter, limitToUserLibraryParameter, thisAutorunDateSParameter, resultsFolder1Parameter, resultsFolder2Parameter, userDBParameter, keepDeleteParameter, doNoExecuteParameter, searchResultsCount, queryDetails, errorDesc);
        }
    
        public virtual int ap_SearchBuildEachQuery_AJA(string op, string tab, string field, string termA, string termB, Nullable<int> findA, Nullable<int> findB, Nullable<int> testOrder, string extra, Nullable<int> fullOld, Nullable<int> fullNew, string fullOldLimit, ObjectParameter querySub, ObjectParameter queryDetails)
        {
            var opParameter = op != null ?
                new ObjectParameter("Op", op) :
                new ObjectParameter("Op", typeof(string));
    
            var tabParameter = tab != null ?
                new ObjectParameter("Tab", tab) :
                new ObjectParameter("Tab", typeof(string));
    
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var termAParameter = termA != null ?
                new ObjectParameter("TermA", termA) :
                new ObjectParameter("TermA", typeof(string));
    
            var termBParameter = termB != null ?
                new ObjectParameter("TermB", termB) :
                new ObjectParameter("TermB", typeof(string));
    
            var findAParameter = findA.HasValue ?
                new ObjectParameter("FindA", findA) :
                new ObjectParameter("FindA", typeof(int));
    
            var findBParameter = findB.HasValue ?
                new ObjectParameter("FindB", findB) :
                new ObjectParameter("FindB", typeof(int));
    
            var testOrderParameter = testOrder.HasValue ?
                new ObjectParameter("TestOrder", testOrder) :
                new ObjectParameter("TestOrder", typeof(int));
    
            var extraParameter = extra != null ?
                new ObjectParameter("Extra", extra) :
                new ObjectParameter("Extra", typeof(string));
    
            var fullOldParameter = fullOld.HasValue ?
                new ObjectParameter("FullOld", fullOld) :
                new ObjectParameter("FullOld", typeof(int));
    
            var fullNewParameter = fullNew.HasValue ?
                new ObjectParameter("FullNew", fullNew) :
                new ObjectParameter("FullNew", typeof(int));
    
            var fullOldLimitParameter = fullOldLimit != null ?
                new ObjectParameter("FullOldLimit", fullOldLimit) :
                new ObjectParameter("FullOldLimit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ap_SearchBuildEachQuery_AJA", opParameter, tabParameter, fieldParameter, termAParameter, termBParameter, findAParameter, findBParameter, testOrderParameter, extraParameter, fullOldParameter, fullNewParameter, fullOldLimitParameter, querySub, queryDetails);
        }
    
        public virtual int ap_SearchBuildFullQuery_AJA(Nullable<int> searchID, Nullable<int> searchMode, Nullable<int> shelfLife, Nullable<int> limitToUserLibrary, Nullable<System.DateTime> thisAutorunDate, Nullable<int> resultsFolder1, Nullable<int> resultsFolder2, string userDB, Nullable<byte> keepDelete, ObjectParameter queryFinal, ObjectParameter runQuery, ObjectParameter errorDesc, ObjectParameter queryDetails)
        {
            var searchIDParameter = searchID.HasValue ?
                new ObjectParameter("SearchID", searchID) :
                new ObjectParameter("SearchID", typeof(int));
    
            var searchModeParameter = searchMode.HasValue ?
                new ObjectParameter("SearchMode", searchMode) :
                new ObjectParameter("SearchMode", typeof(int));
    
            var shelfLifeParameter = shelfLife.HasValue ?
                new ObjectParameter("ShelfLife", shelfLife) :
                new ObjectParameter("ShelfLife", typeof(int));
    
            var limitToUserLibraryParameter = limitToUserLibrary.HasValue ?
                new ObjectParameter("LimitToUserLibrary", limitToUserLibrary) :
                new ObjectParameter("LimitToUserLibrary", typeof(int));
    
            var thisAutorunDateParameter = thisAutorunDate.HasValue ?
                new ObjectParameter("ThisAutorunDate", thisAutorunDate) :
                new ObjectParameter("ThisAutorunDate", typeof(System.DateTime));
    
            var resultsFolder1Parameter = resultsFolder1.HasValue ?
                new ObjectParameter("ResultsFolder1", resultsFolder1) :
                new ObjectParameter("ResultsFolder1", typeof(int));
    
            var resultsFolder2Parameter = resultsFolder2.HasValue ?
                new ObjectParameter("ResultsFolder2", resultsFolder2) :
                new ObjectParameter("ResultsFolder2", typeof(int));
    
            var userDBParameter = userDB != null ?
                new ObjectParameter("UserDB", userDB) :
                new ObjectParameter("UserDB", typeof(string));
    
            var keepDeleteParameter = keepDelete.HasValue ?
                new ObjectParameter("KeepDelete", keepDelete) :
                new ObjectParameter("KeepDelete", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ap_SearchBuildFullQuery_AJA", searchIDParameter, searchModeParameter, shelfLifeParameter, limitToUserLibraryParameter, thisAutorunDateParameter, resultsFolder1Parameter, resultsFolder2Parameter, userDBParameter, keepDeleteParameter, queryFinal, runQuery, errorDesc, queryDetails);
        }
    
        public virtual int ap_SearchQueryAdd_AJA(string op1, string terms1, string tab1, string op2, string terms2, string tab2, string op3, string terms3, string tab3, string op4, string terms4, string tab4, string op5, string terms5, string tab5, string op6, string terms6, string tab6, Nullable<short> publicationTypeMask, Nullable<short> subjectAgeMask, Nullable<byte> languageMask, Nullable<byte> speciesMask, Nullable<byte> genderMask, Nullable<byte> abstractMask, Nullable<byte> paperAge, Nullable<short> dateStart, Nullable<short> dateEnd, Nullable<byte> searchSort, Nullable<int> userID, string searchName, Nullable<byte> autoSearch, Nullable<short> shelfLife, string description, Nullable<byte> limitToUserLibrary, Nullable<int> resultsFolder1, Nullable<int> resultsFolder2, string userDB, Nullable<byte> keepDelete, ObjectParameter returnCode)
        {
            var op1Parameter = op1 != null ?
                new ObjectParameter("Op1", op1) :
                new ObjectParameter("Op1", typeof(string));
    
            var terms1Parameter = terms1 != null ?
                new ObjectParameter("Terms1", terms1) :
                new ObjectParameter("Terms1", typeof(string));
    
            var tab1Parameter = tab1 != null ?
                new ObjectParameter("Tab1", tab1) :
                new ObjectParameter("Tab1", typeof(string));
    
            var op2Parameter = op2 != null ?
                new ObjectParameter("Op2", op2) :
                new ObjectParameter("Op2", typeof(string));
    
            var terms2Parameter = terms2 != null ?
                new ObjectParameter("Terms2", terms2) :
                new ObjectParameter("Terms2", typeof(string));
    
            var tab2Parameter = tab2 != null ?
                new ObjectParameter("Tab2", tab2) :
                new ObjectParameter("Tab2", typeof(string));
    
            var op3Parameter = op3 != null ?
                new ObjectParameter("Op3", op3) :
                new ObjectParameter("Op3", typeof(string));
    
            var terms3Parameter = terms3 != null ?
                new ObjectParameter("Terms3", terms3) :
                new ObjectParameter("Terms3", typeof(string));
    
            var tab3Parameter = tab3 != null ?
                new ObjectParameter("Tab3", tab3) :
                new ObjectParameter("Tab3", typeof(string));
    
            var op4Parameter = op4 != null ?
                new ObjectParameter("Op4", op4) :
                new ObjectParameter("Op4", typeof(string));
    
            var terms4Parameter = terms4 != null ?
                new ObjectParameter("Terms4", terms4) :
                new ObjectParameter("Terms4", typeof(string));
    
            var tab4Parameter = tab4 != null ?
                new ObjectParameter("Tab4", tab4) :
                new ObjectParameter("Tab4", typeof(string));
    
            var op5Parameter = op5 != null ?
                new ObjectParameter("Op5", op5) :
                new ObjectParameter("Op5", typeof(string));
    
            var terms5Parameter = terms5 != null ?
                new ObjectParameter("Terms5", terms5) :
                new ObjectParameter("Terms5", typeof(string));
    
            var tab5Parameter = tab5 != null ?
                new ObjectParameter("Tab5", tab5) :
                new ObjectParameter("Tab5", typeof(string));
    
            var op6Parameter = op6 != null ?
                new ObjectParameter("Op6", op6) :
                new ObjectParameter("Op6", typeof(string));
    
            var terms6Parameter = terms6 != null ?
                new ObjectParameter("Terms6", terms6) :
                new ObjectParameter("Terms6", typeof(string));
    
            var tab6Parameter = tab6 != null ?
                new ObjectParameter("Tab6", tab6) :
                new ObjectParameter("Tab6", typeof(string));
    
            var publicationTypeMaskParameter = publicationTypeMask.HasValue ?
                new ObjectParameter("PublicationTypeMask", publicationTypeMask) :
                new ObjectParameter("PublicationTypeMask", typeof(short));
    
            var subjectAgeMaskParameter = subjectAgeMask.HasValue ?
                new ObjectParameter("SubjectAgeMask", subjectAgeMask) :
                new ObjectParameter("SubjectAgeMask", typeof(short));
    
            var languageMaskParameter = languageMask.HasValue ?
                new ObjectParameter("LanguageMask", languageMask) :
                new ObjectParameter("LanguageMask", typeof(byte));
    
            var speciesMaskParameter = speciesMask.HasValue ?
                new ObjectParameter("SpeciesMask", speciesMask) :
                new ObjectParameter("SpeciesMask", typeof(byte));
    
            var genderMaskParameter = genderMask.HasValue ?
                new ObjectParameter("GenderMask", genderMask) :
                new ObjectParameter("GenderMask", typeof(byte));
    
            var abstractMaskParameter = abstractMask.HasValue ?
                new ObjectParameter("AbstractMask", abstractMask) :
                new ObjectParameter("AbstractMask", typeof(byte));
    
            var paperAgeParameter = paperAge.HasValue ?
                new ObjectParameter("PaperAge", paperAge) :
                new ObjectParameter("PaperAge", typeof(byte));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(short));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(short));
    
            var searchSortParameter = searchSort.HasValue ?
                new ObjectParameter("SearchSort", searchSort) :
                new ObjectParameter("SearchSort", typeof(byte));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            var autoSearchParameter = autoSearch.HasValue ?
                new ObjectParameter("AutoSearch", autoSearch) :
                new ObjectParameter("AutoSearch", typeof(byte));
    
            var shelfLifeParameter = shelfLife.HasValue ?
                new ObjectParameter("ShelfLife", shelfLife) :
                new ObjectParameter("ShelfLife", typeof(short));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var limitToUserLibraryParameter = limitToUserLibrary.HasValue ?
                new ObjectParameter("LimitToUserLibrary", limitToUserLibrary) :
                new ObjectParameter("LimitToUserLibrary", typeof(byte));
    
            var resultsFolder1Parameter = resultsFolder1.HasValue ?
                new ObjectParameter("ResultsFolder1", resultsFolder1) :
                new ObjectParameter("ResultsFolder1", typeof(int));
    
            var resultsFolder2Parameter = resultsFolder2.HasValue ?
                new ObjectParameter("ResultsFolder2", resultsFolder2) :
                new ObjectParameter("ResultsFolder2", typeof(int));
    
            var userDBParameter = userDB != null ?
                new ObjectParameter("UserDB", userDB) :
                new ObjectParameter("UserDB", typeof(string));
    
            var keepDeleteParameter = keepDelete.HasValue ?
                new ObjectParameter("KeepDelete", keepDelete) :
                new ObjectParameter("KeepDelete", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ap_SearchQueryAdd_AJA", op1Parameter, terms1Parameter, tab1Parameter, op2Parameter, terms2Parameter, tab2Parameter, op3Parameter, terms3Parameter, tab3Parameter, op4Parameter, terms4Parameter, tab4Parameter, op5Parameter, terms5Parameter, tab5Parameter, op6Parameter, terms6Parameter, tab6Parameter, publicationTypeMaskParameter, subjectAgeMaskParameter, languageMaskParameter, speciesMaskParameter, genderMaskParameter, abstractMaskParameter, paperAgeParameter, dateStartParameter, dateEndParameter, searchSortParameter, userIDParameter, searchNameParameter, autoSearchParameter, shelfLifeParameter, descriptionParameter, limitToUserLibraryParameter, resultsFolder1Parameter, resultsFolder2Parameter, userDBParameter, keepDeleteParameter, returnCode);
        }
    
        public virtual ObjectResult<ap_SearchFetchRange_AJA_Result> ap_SearchFetchRange_AJA(Nullable<int> userID, string searchName, Nullable<int> searchID, Nullable<int> rangeStart, Nullable<int> rangeEnd)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            var searchIDParameter = searchID.HasValue ?
                new ObjectParameter("SearchID", searchID) :
                new ObjectParameter("SearchID", typeof(int));
    
            var rangeStartParameter = rangeStart.HasValue ?
                new ObjectParameter("RangeStart", rangeStart) :
                new ObjectParameter("RangeStart", typeof(int));
    
            var rangeEndParameter = rangeEnd.HasValue ?
                new ObjectParameter("RangeEnd", rangeEnd) :
                new ObjectParameter("RangeEnd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ap_SearchFetchRange_AJA_Result>("ap_SearchFetchRange_AJA", userIDParameter, searchNameParameter, searchIDParameter, rangeStartParameter, rangeEndParameter);
        }
    
        public virtual ObjectResult<ap_SearchQueryGet_AJA_Result> ap_SearchQueryGet_AJA(Nullable<int> userID, string searchName, Nullable<int> searchID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            var searchIDParameter = searchID.HasValue ?
                new ObjectParameter("SearchID", searchID) :
                new ObjectParameter("SearchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ap_SearchQueryGet_AJA_Result>("ap_SearchQueryGet_AJA", userIDParameter, searchNameParameter, searchIDParameter);
        }
    }
}
