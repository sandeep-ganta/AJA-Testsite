//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SearchEntities : DbContext
    {
        public SearchEntities()
            : base("name=SearchEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<SearchSummary> SearchSummaries { get; set; }
        public DbSet<SearchDetail> SearchDetails { get; set; }
        public DbSet<SearchResult> SearchResults { get; set; }
        public DbSet<UserCitation> UserCitations { get; set; }
    
        public virtual int ap_SearchQueryGet(Nullable<int> userID, string searchName, Nullable<int> searchID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            var searchIDParameter = searchID.HasValue ?
                new ObjectParameter("SearchID", searchID) :
                new ObjectParameter("SearchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ap_SearchQueryGet", userIDParameter, searchNameParameter, searchIDParameter);
        }
    
        public virtual ObjectResult<SearchQueryGet_Result> SearchQueryGet(Nullable<int> userID, string searchName, Nullable<int> searchID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            var searchIDParameter = searchID.HasValue ?
                new ObjectParameter("SearchID", searchID) :
                new ObjectParameter("SearchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchQueryGet_Result>("SearchQueryGet", userIDParameter, searchNameParameter, searchIDParameter);
        }
    
        public virtual ObjectResult<lib_GetSearchCitationList_Result> lib_GetSearchCitationList(Nullable<int> userID, Nullable<int> searchID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchIDParameter = searchID.HasValue ?
                new ObjectParameter("SearchID", searchID) :
                new ObjectParameter("SearchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lib_GetSearchCitationList_Result>("lib_GetSearchCitationList", userIDParameter, searchIDParameter);
        }
    }
}
