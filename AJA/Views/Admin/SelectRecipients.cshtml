@{ 
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@model DAL.Models.Monthlyeditorsmail

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.3.js"></script>


@*<a href="~/Admin/SendTest">Back</a>*@
@if (Model != null)
{
    using (Html.BeginForm("Mailing", "Admin", FormMethod.Post, new { @id = "form_selectrecepients" }))
    { 
    <table border="0" style="background-color: #f5f5f5; border: 1px solid #ccc; margin-top: 10px;" width="100%">
        <tr style="height: 20px">
            <td style="width: 5%"></td>
            <td style="width: 40%"></td>
            <td style="width: 10%"></td>
            <td style="width: 40%"></td>
            <td style="width: 5%"></td>
        </tr>
        <tr>
            <td></td>
            <td class="mailPageHeading" style="background-color: #ccc">Recipients</td>
            <td></td>
            <td class="mailPageHeading" style="background-color: #ccc">Non-recipients</td>
            <td></td>
        </tr>
        <tr>
            <td>@Html.HiddenFor(model => model.senderaddres, new { @id = "hdsenderaddr" })
                @Html.HiddenFor(model => model.sendername, new { @id = "hdsendername" })
                @Html.HiddenFor(model => model.subject, new { @id = "hdsubject" })
                @Html.HiddenFor(model => model._htmlmesage, new { @id = "hdhtmlmsg" })
                @Html.HiddenFor(model => model._message, new { @id = "hdmessage" })
                @Html.HiddenFor(model => model.Ishtml, new { @id = "hdishtml" })
                @Html.HiddenFor(model => model.editionid, new { @id = "hdeditionid" })
                @Html.HiddenFor(model => model.editionname, new { @id = "hdeditionname" })
                @Html.HiddenFor(model => model.SpecialtyID, new { @id = "hdspecialtyid" })
                @Html.HiddenFor(model => model.SpecialtyName, new { @id = "hdspecialtyname" })
            </td>
            <td>
                @*@Html.ListBoxFor(model => Model.Usermaildetails,
                            new MultiSelectList(Model.Usermaildetails, "emailwithname",
                            "emailwithname"), new { @id = "lstRecipients", @style = "Width:100%; min-height:170px " })*@
                <div id="content">
                    <ul id="lstincluded" class="droppable">
                        @foreach (var item in Model.Usermaildetails)
                        {
                            <li class="item draggable" data-included="@item.emailwithname">
                                <input type="checkbox" name="@item.emailwithname" />
                                @item.emailwithname</li>
                        }
                    </ul>
                </div>
            </td>
            <td style="text-align: center">
                <br />
                @*  <input type="button" value="→" style="font-size: xx-large; margin-bottom: 8px;" id="btnExclude" />
                <br />
                <input type="button" value="←" style="font-size: xx-large" id="btnInclude" />*@

                <br />
                <br />
            </td>
            <td>

                <ul id="lstbind" style="height: 500px; background-color: gray">
                    <li class="item draggable"></li>
                </ul>

                @*    @if (Model.Userexcludedmaildetails != null && Model.Userexcludedmaildetails.Count() != 0)
                {
                    @Html.ListBoxFor(model => Model.Userexcludedmaildetails, new MultiSelectList(Model.Userexcludedmaildetails, "emailwithname", "emailwithname"), new { @id = "lstExcluded", @style = "Width:100%; min-height:170px " })
 @Html.ListBox("lstExcluded", ((IEnumerable<SelectListItem>)Model.excludemaildetails), new { @style = "font-family=Courier New,Courier,Monospace, Rows=10; Width=100% ", @class = "lstfirst" })
                }
                else
                {
                    @Html.ListBox("lstExcluded", new SelectList(new[] { "" }), new { @style = "Width:100%; min-height:170px ", @class = "lstsecond nrlstls", @name = "lstExcluded" })   
                }
*@

            </td>
            <td></td>
        </tr>
        <tr>
            <td></td>
            <td style="background-color: #ccc; text-align: center">
                @*  Select All: @Html.CheckBoxFor(model => model.checkallrecipients, new { @id = "chkallrecipients" })<br />*@
                <input type="submit" value="Mail Now" id="btnGoodToGo" style="Width: 116px" />

                <br>
                <br>
            </td>
            <td></td>
            <td style="background-color: #ccc; padding-left: 20px; padding-top: 10px; padding-bottom: 10px;">View:<br />

                @Html.RadioButtonFor(model => model.Excludedusers, "Excludedusers", new { @class = "exclude", @id = "rad_excld" })
                @Html.LabelFor(model => model.Excludedusers, "Excluded users")
                <br />

                @Html.RadioButtonFor(model => model.Othersinspecialty, "Othersinspecialty", new { @class = "others" })
                @Html.LabelFor(model => model.Othersinspecialty, "Others in specialty")
                <br />
                @*   @Html.RadioButtonFor(model => model.Allotherusers, "Allotherusers", new { @class = "allother" })
                @Html.LabelFor(model => model.Allotherusers, "All other users")*@

                @*  @Html.RadioButtonFor(m => m.Title, new SelectList(new DAL.Models.Monthlyeditorsmail().GetRoption(), "val", "Title"), new { @id = "rdl_user" })*@
            </td>
            <td></td>
        </tr>
        <tr style="height: 20px">
            <td style="width: 5%"></td>
            <td style="width: 40%"></td>
            <td style="width: 10%"></td>
            <td style="width: 40%"></td>
            <td style="width: 5%"></td>
        </tr>
    </table>
    <br />
    <em>These selections apply to this email only; they do not changes subscribers' profiles</em>
     
    <script type="text/javascript">

        //$(document).ready(function () {
        //    $('.exclude').trigger('change');
        //    $('#lstExcluded option:empty').remove(); //hides empty <option> element 
        //});

        ////Moving selected listitems from Recipients to Non-recipients on 'btnExclude' click 
        //$('#btnExclude').click(function (e) {
        //    //var data = [];
        //    var data = $('#lstRecipients > option:selected');
        //    if (data.length != 0) {
        //        $('#lstExcluded').append($(data).clone()); $(data).remove();
        //    }
        //    else {
        //        alert("Select any Recipient..");
        //    }
        //    e.preventDefault();
        //});

        ////Moving selected listitems from  Non-recipients Recipients on 'btnInclude' click 
        //$('#btnInclude').click(function (e) {
        //    //var data = [];  
        //    var data = $('#lstExcluded option:selected');
        //    if (data.length != 0) {
        //        $('#lstRecipients').append($(data).clone()); $(data).remove();
        //        return;
        //    }
        //    else {
        //        alert("Select any Non-Recipient..");
        //    }
        //    e.preventDefault();
        //});

        ////$('#btnIncludeAll').click(function (e) {
        ////    var selectedOpts = $('#lstRecipients option');
        ////    if (selectedOpts.length == 0) {
        ////        alert("Nothing to move..");
        ////        e.preventDefault();
        ////    }

        ////    $('#lstExcluded').append($(selectedOpts).clone());
        ////    $(selectedOpts).remove();
        ////    e.preventDefault();
        ////});

        //// Mailnow button click 
        //$('#btnGoodToGo').click(function () {

        //    //$('#btnGoodToGo').attr("disabled", "disabled");
        //    //$('#lstRecipients select option').prop('selected', true);
        //    $('#lstRecipients option').each(function () {
        //        $(this).attr('selected', true);
        //    });
        //    $('#lstExcluded option:not([aria-lbl])').each(function () {
        //        $(this).attr('selected', true);
        //    });
        //});

        ////Binding the Values 
        //function GetFieldJson() {
        //    var getdata = Getemailvalues();
        //    var selectedIndices = [];
        //    if ($('#lstExcluded option[value!="aria-lbl"]').length != 0) {
        //        $.each($('#lstExcluded option:not([aria-lbl])').attr("seleceted", "selected"), function () { // loop over each option
        //            if ($(this).val != null && $(this)[0].getAttribute("aria-lbl") == null) {
        //                var Field = { id: $(this).val() };
        //                selectedIndices.push(Field); // add the index to the array
        //            }
        //        });
        //    }

        //    var Field = {
        //        Usermaildetails: getdata,
        //        Userexcludedmaildetails: selectedIndices,
        //        senderaddres: $('#hdsenderaddr').val(),
        //        sendername: $('#hdsendername').val(),
        //        subject: $('#hdsubject').val(),
        //        _htmlmesage: $('#hdhtmlmsg').val(),
        //        _message: $('#hdmessage').val(),
        //        Ishtml: $('#hdishtml').val(),
        //        editionname: $('#hdeditionname').val(),
        //        editionid: $('#hdeditionid').val(),
        //        SpecialtyID: $('#hdspecialtyid').val(),
        //        SpecialtyName: $('#hdspecialtyname').val()
        //    };
        //    return Field;
        //}

        //function Getemailvalues() {
        //    var selectedIndices = [];
        //    $.each($('#lstRecipients option').attr("seleceted", "selected"), function () { // loop over each option
        //        if ($(this).val != null) {
        //            var Field = { id: $(this).val() };
        //            selectedIndices.push(Field); // add the index to the array
        //        }
        //    });
        //    return selectedIndices;
        //}

        ////To get specialties not related to selected specialty on New Mailing page when clicked 'Othersinspecialty' radia button change
        //$(".others").click(function (event) {
        //    $.ajax({
        //        url: ServerURL + '/Admin/Getotherspecalities/',
        //        dataType: "json",
        //        contentType: "application/json; charset=utf-8",
        //        type: "GET",
        //        error: function () {
        //            alert("An error occurred.");
        //        },
        //        success: function (data) {
        //            // debugger;
        //            var items = "";
        //            if (data != null) {
        //                var exists = false;
        //                $.each(data, function (j, item) {
        //                    //debugger;
        //                    for (var i = 0, opts = document.getElementById('lstRecipients').options; i < opts.length; ++i) {
        //                        if (item != null && item != undefined) {
        //                            if (opts[i].value === item.Value) {
        //                                // data.splice(data.indexOf(item), 1); 
        //                                //data.items.remove(item.Value);
        //                                delete data[j];
        //                            }
        //                        }
        //                    }
        //                });
        //                $.each(data, function (i, item) {
        //                    if (item != null && item != undefined) {
        //                        items += "<option value=\"" + item.Value + "\" aria-lbl=" + i + ">" + item.Text + "</option>";
        //                    }
        //                });
        //                $('#lstExcluded option[aria-lbl]').remove();
        //                $("#lstExcluded").append(items);
        //            }
        //        }
        //    });
        //    $('.exclude').removeAttr('checked');
        //    $('.allother').removeAttr('checked');
        //});

        //$('.exclude').change(function () {
        //    $('#lstExcluded option[aria-lbl]').remove();
        //    $('.allother').removeAttr('checked');
        //    $('.others').removeAttr('checked');
        //});

        //$('.allother').change(function () {
        //    $('.exclude').removeAttr('checked');
        //    $('.others').removeAttr('checked');
        //});


        $("#lstbind").droppable({
            accept:".draggable",
            activeClass: "ui-state-highlight",
            drop: function (event, ui) {
                debugger;
                alert(Hi);
                $('<li></li>').text('Test').appendTo($(this));
                $(ui.helper).children().each(function (indx, ele) {
                    var name=$(ele).find(':checkbox').attr('name');
                    $('<li></li>').text(name).attr(name).appendTo($(this));			
                })
                var $list = $(this);
                $helper = ui.helper;
                $($helper).removeClass("selected");
                var $selected = $(".selected");
                if ($selected.length > 1) {
                    moveSelected($list, $selected);
                } else {
                    moveItem(ui.draggable, $list);
                }
            }, tolerance: "touch"
        });

        $(".draggable").draggable({
            revert: "invalid",
            helper: "clone",
            cursor: "move",
            container: "window",
            helper: function () { 
                var selected = $(this).parent().find('input:checkbox:checked').parents('li');
                if (selected.length === 0) {
                    $(this).children().prop('checked', true);
                    selected = $(this);
                }
                var container = $('<div/>').attr('draggingContainer', 'draggingContainer');
                container.append(selected.clone());
                oldselected = selected;
                return container;
            }

            //drag: function (event, ui) {
            //    debugger;
            //    var $helper = ui.helper;
            //    $($helper).removeClass("selected");
            //    var $selected = $(".selected");
            //    if ($selected.length > 1) {
            //        $($helper).html($selected.length + " items");
            //    }
            //},
        });

        function moveSelected($list, $selected) {

            $($selected).each(function () {
                $(this).fadeOut(function () {
                    $(this).appendTo($list).removeClass("selected").fadeIn();
                });
            });
        }

        function moveItem($item, $list) {

            $item.fadeOut(function () {
                $item.find(".item").remove();
                $item.appendTo($list).fadeIn();
            });
        }

        $(".item").click(function () {
            $(this).toggleClass("selected");
        });

    </script>
    
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/Commonscript")
    @*@Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/themes/base/css")*@
}